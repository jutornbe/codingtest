{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction PersonsComponent_tr_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const person_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.personalIdentificationNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.surName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.firstNames);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.streetAddress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.zipCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.postalDistrict);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.country);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.nationality);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.motherTongue);\n  }\n}\nexport class PersonsComponent {\n  constructor(formBuilder, httpClient) {\n    this.formBuilder = formBuilder;\n    this.httpClient = httpClient;\n    this.person = {\n      personalIdentificationNumber: '',\n      surName: '',\n      firstNames: '',\n      streetAdress: '',\n      zipCode: '',\n      postalDistrict: '',\n      country: '',\n      nationality: '',\n      motherTongue: ''\n    };\n    this.persons = [];\n  }\n  ngOnInit() {\n    this.personForm = this.formBuilder.group({\n      personalIdentificationNumber: ['', [Validators.required, Validators.pattern(/^\\d{6}-\\d{4}$/)]]\n      // Lisää muut kentät ja niiden validoinnit\n    });\n\n    this.loadPersons();\n  }\n  isZipCodeValid() {\n    return this.person.zipCode.length === 5;\n  }\n  loadPersons() {\n    this.httpClient.get('http://localhost:8080/person').subscribe(response => {\n      this.persons = response;\n    });\n  }\n  addPerson() {\n    this.httpClient.post('http://localhost:8080/person', this.person).subscribe(() => {\n      // Updates list of persons\n      this.person = {\n        personalIdentificationNumber: '',\n        surName: '',\n        firstNames: '',\n        streetAdress: '',\n        zipCode: '',\n        postalDistrict: '',\n        country: '',\n        nationality: '',\n        motherTongue: ''\n      };\n      this.loadPersons();\n    });\n  }\n  static #_ = this.ɵfac = function PersonsComponent_Factory(t) {\n    return new (t || PersonsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PersonsComponent,\n    selectors: [[\"app-person\"]],\n    decls: 85,\n    vars: 11,\n    consts: [[\"personForm\", \"ngForm\"], [\"for\", \"personalIdentificationNumber\"], [\"type\", \"text\", \"id\", \"personalIdentificationNumber\", \"name\", \"personalIdentificationNumber\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"surName\"], [\"type\", \"text\", \"id\", \"surName\", \"name\", \"surName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"firstNames\"], [\"type\", \"text\", \"id\", \"firstNames\", \"name\", \"firstNames\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"streetAddress\"], [\"type\", \"text\", \"id\", \"streetAddress\", \"name\", \"streetAddress\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"zipCode\"], [\"type\", \"text\", \"id\", \"zipCode\", \"name\", \"zipCode\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"postalDistrict\"], [\"type\", \"text\", \"id\", \"postalDistrict\", \"name\", \"postalDistrict\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"country\"], [\"type\", \"text\", \"id\", \"country\", \"name\", \"country\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"nationality\"], [\"type\", \"text\", \"id\", \"nationality\", \"name\", \"nationality\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"motherTongue\"], [\"type\", \"text\", \"id\", \"motherTongue\", \"name\", \"motherTongue\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"disabled\", \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function PersonsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Sy\\u00F6t\\u00E4 henkil\\u00F6tiedot\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", null, 0)(4, \"div\")(5, \"table\")(6, \"tr\")(7, \"td\")(8, \"label\", 1);\n        i0.ɵɵtext(9, \"Henkil\\u00F6tunnus*:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"td\")(11, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function PersonsComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.person.personalIdentificationNumber = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"tr\")(13, \"td\")(14, \"label\", 3);\n        i0.ɵɵtext(15, \"Sukunimi*:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"td\")(17, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function PersonsComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.person.surName = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"tr\")(19, \"td\")(20, \"label\", 5);\n        i0.ɵɵtext(21, \"Etunimet*:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"td\")(23, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function PersonsComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.person.firstNames = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"tr\")(25, \"td\")(26, \"label\", 7);\n        i0.ɵɵtext(27, \"Katuosoite*:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"td\")(29, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function PersonsComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.person.streetAddress = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(30, \"tr\")(31, \"td\")(32, \"label\", 9);\n        i0.ɵɵtext(33, \"Postinumero*:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"td\")(35, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function PersonsComponent_Template_input_ngModelChange_35_listener($event) {\n          return ctx.person.zipCode = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"tr\")(37, \"td\")(38, \"label\", 11);\n        i0.ɵɵtext(39, \"Postitoimipaikka*:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"td\")(41, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function PersonsComponent_Template_input_ngModelChange_41_listener($event) {\n          return ctx.person.postalDistrict = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(42, \"tr\")(43, \"td\")(44, \"label\", 13);\n        i0.ɵɵtext(45, \"Asuinmaa*:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"td\")(47, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function PersonsComponent_Template_input_ngModelChange_47_listener($event) {\n          return ctx.person.country = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"tr\")(49, \"td\")(50, \"label\", 15);\n        i0.ɵɵtext(51, \"Kansallisuus*:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(52, \"td\")(53, \"input\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function PersonsComponent_Template_input_ngModelChange_53_listener($event) {\n          return ctx.person.nationality = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(54, \"tr\")(55, \"td\")(56, \"label\", 17);\n        i0.ɵɵtext(57, \"\\u00C4idinkieli*:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(58, \"td\")(59, \"input\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function PersonsComponent_Template_input_ngModelChange_59_listener($event) {\n          return ctx.person.motherTongue = $event;\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(60, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function PersonsComponent_Template_button_click_60_listener() {\n          return ctx.addPerson();\n        });\n        i0.ɵɵtext(61, \"Lis\\u00E4\\u00E4 henkil\\u00F6\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(62, \"h2\");\n        i0.ɵɵtext(63, \"Henkil\\u00F6t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"table\")(65, \"tr\")(66, \"td\");\n        i0.ɵɵtext(67, \"Henkil\\u00F6tunnus\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"td\");\n        i0.ɵɵtext(69, \"Sukunimi\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"td\");\n        i0.ɵɵtext(71, \"Etunimet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"td\");\n        i0.ɵɵtext(73, \"Katuosoite\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"td\");\n        i0.ɵɵtext(75, \"Postinumero\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"td\");\n        i0.ɵɵtext(77, \"Postitoimipaikka\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(78, \"td\");\n        i0.ɵɵtext(79, \"Maa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"td\");\n        i0.ɵɵtext(81, \"Kansallisuus\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"td\");\n        i0.ɵɵtext(83, \"\\u00C4idinkieli\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(84, PersonsComponent_tr_84_Template, 19, 9, \"tr\", 20);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(3);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.person.personalIdentificationNumber);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.person.surName);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.person.firstNames);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.person.streetAddress);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.person.zipCode);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.person.postalDistrict);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.person.country);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.person.nationality);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.person.motherTongue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !_r0.form.valid || !ctx.isZipCodeValid());\n        i0.ɵɵadvance(24);\n        i0.ɵɵproperty(\"ngForOf\", ctx.persons);\n      }\n    },\n    dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","person_r2","personalIdentificationNumber","surName","firstNames","streetAddress","zipCode","postalDistrict","country","nationality","motherTongue","PersonsComponent","constructor","formBuilder","httpClient","person","streetAdress","persons","ngOnInit","personForm","group","required","pattern","loadPersons","isZipCodeValid","length","get","subscribe","response","addPerson","post","_","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","_2","selectors","decls","vars","consts","template","PersonsComponent_Template","rf","ctx","ɵɵlistener","PersonsComponent_Template_input_ngModelChange_11_listener","$event","PersonsComponent_Template_input_ngModelChange_17_listener","PersonsComponent_Template_input_ngModelChange_23_listener","PersonsComponent_Template_input_ngModelChange_29_listener","PersonsComponent_Template_input_ngModelChange_35_listener","PersonsComponent_Template_input_ngModelChange_41_listener","PersonsComponent_Template_input_ngModelChange_47_listener","PersonsComponent_Template_input_ngModelChange_53_listener","PersonsComponent_Template_input_ngModelChange_59_listener","PersonsComponent_Template_button_click_60_listener","ɵɵtemplate","PersonsComponent_tr_84_Template","ɵɵproperty","_r0","form","valid"],"sources":["C:\\code\\cgitest1-gui\\src\\app\\persons\\persons.component.ts","C:\\code\\cgitest1-gui\\src\\app\\persons\\persons.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-person',\n  templateUrl: './persons.component.html',\n  styleUrls: ['./persons.component.css']\n})\nexport class PersonsComponent implements OnInit {\n  personForm: FormGroup;\n\n  person: any = {\n    personalIdentificationNumber: '',\n    surName: '',\n    firstNames: '',\n    streetAdress: '',\n    zipCode: '',\n    postalDistrict: '',\n    country: '',\n    nationality: '',\n    motherTongue: ''\n  };\n  persons: any[] = [];\n\n  constructor(private formBuilder: FormBuilder, private httpClient: HttpClient) { }\n\n  ngOnInit(): void {\n    this.personForm = this.formBuilder.group({\n      personalIdentificationNumber: ['', [Validators.required, Validators.pattern(/^\\d{6}-\\d{4}$/)]],\n      // Lisää muut kentät ja niiden validoinnit\n    });\n    this.loadPersons();\n  }\n\n  isZipCodeValid(): boolean {\n    return this.person.zipCode.length === 5;\n  }\n\n  loadPersons() {\n    this.httpClient.get('http://localhost:8080/person')\n      .subscribe((response: any) => {\n        this.persons = response;\n      });\n  }\n\n  addPerson() {\n    this.httpClient.post('http://localhost:8080/person', this.person).subscribe(() => {\n        // Updates list of persons\n        this.person = {\n          personalIdentificationNumber: '',\n          surName: '',\n          firstNames: '',          \n          streetAdress: '',\n          zipCode: '',\n          postalDistrict: '',\n          country: '',\n          nationality: '',\n          motherTongue: ''\n        };\n        \n        this.loadPersons();\n      });\n  }\n}","<h2>Syötä henkilötiedot</h2>\n<form #personForm=\"ngForm\">\n  <div>\n  <table>\n    <tr>\n      <td><label for=\"personalIdentificationNumber\">Henkilötunnus*:</label></td>\n      <td><input type=\"text\" id=\"personalIdentificationNumber\" [(ngModel)]=\"person.personalIdentificationNumber\" name=\"personalIdentificationNumber\" required></td>\n    </tr>\n    <tr>\n      <td><label for=\"surName\">Sukunimi*:</label></td>\n      <td><input type=\"text\" id=\"surName\" [(ngModel)]=\"person.surName\" name=\"surName\" required></td>\n    </tr>\n    <tr>\n      <td><label for=\"firstNames\">Etunimet*:</label></td>\n      <td><input type=\"text\" id=\"firstNames\" [(ngModel)]=\"person.firstNames\" name=\"firstNames\" required></td>\n    </tr>\n    <tr>\n      <td><label for=\"streetAddress\">Katuosoite*:</label></td>\n      <td><input type=\"text\" id=\"streetAddress\" [(ngModel)]=\"person.streetAddress\" name=\"streetAddress\" required></td>\n    </tr>\n    <tr>\n      <td><label for=\"zipCode\">Postinumero*:</label></td>\n      <td><input type=\"text\" id=\"zipCode\" [(ngModel)]=\"person.zipCode\" name=\"zipCode\" required></td>\n    </tr>\n    <tr>\n      <td><label for=\"postalDistrict\">Postitoimipaikka*:</label></td>\n      <td><input type=\"text\" id=\"postalDistrict\" [(ngModel)]=\"person.postalDistrict\" name=\"postalDistrict\" required></td>\n    </tr>\n    <tr>\n      <td><label for=\"country\">Asuinmaa*:</label></td>\n      <td><input type=\"text\" id=\"country\" [(ngModel)]=\"person.country\" name=\"country\" required></td>\n    </tr>\n    <tr>\n      <td><label for=\"nationality\">Kansallisuus*:</label></td>\n      <td><input type=\"text\" id=\"nationality\" [(ngModel)]=\"person.nationality\" name=\"nationality\" required></td>\n    </tr>    \n    <tr>\n      <td><label for=\"motherTongue\">Äidinkieli*:</label></td>\n      <td><input type=\"text\" id=\"motherTongue\" [(ngModel)]=\"person.motherTongue\" name=\"motherTongue\" required></td>\n    </tr>\n  </table>\n  </div>\n\n  <button [disabled]=\"!personForm.form.valid || !isZipCodeValid()\" (click)=\"addPerson()\">Lisää henkilö</button>\n</form>\n\n<h2>Henkilöt</h2>\n<table>\n  <tr>\n    <td>Henkilötunnus</td>\n    <td>Sukunimi</td>\n    <td>Etunimet</td>\n    <td>Katuosoite</td>\n    <td>Postinumero</td>\n    <td>Postitoimipaikka</td>\n    <td>Maa</td>\n    <td>Kansallisuus</td>\n    <td>Äidinkieli</td>\n  </tr>\n  <tr *ngFor=\"let person of persons\">\n    <td>{{person.personalIdentificationNumber}}</td>\n    <td>{{ person.surName }}</td>\n    <td>{{ person.firstNames }}</td>\n    <td>{{ person.streetAddress }}</td>\n    <td>{{ person.zipCode }}</td>\n    <td>{{ person.postalDistrict }}</td>\n    <td>{{ person.country }}</td>\n    <td>{{ person.nationality }}</td>\n    <td>{{ person.motherTongue }}</td>\n  </tr>\n</table>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}